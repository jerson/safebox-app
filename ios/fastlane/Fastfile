import(File.expand_path("../../fastlane/FastCommonfile", __dir__))

project_dir = File.expand_path("..", __dir__)
output = File.expand_path("ipa", project_dir)
workspace = File.expand_path("SafeBox.xcworkspace", project_dir)
xcodeproj = File.expand_path("SafeBox.xcodeproj", project_dir)
podfile = File.expand_path("Podfile", project_dir)
platform_icon = ":ios:"
current_date = date_formatted_minute

platform :ios do
  desc "Build Beta IPA"
  lane :build_beta do
    name = "Build Beta: #{current_date}"
    begin
      on_start(platform_icon, name)
      cocoapods(repo_update: true, podfile: podfile)
      unlock_keychain(
        path: File.expand_path("xcode.keychain", project_dir),
        password: ENV['KEYCHAIN_PASSWORD'].to_s
      )        
      get_provisioning_profile
      increment_build_number(build_number: ENV['CI_JOB_ID'], xcodeproj: xcodeproj)
      gym(
        workspace: workspace,
        scheme: "SafeBox (Beta)",
        output_directory: output,
        include_symbols: false,
        include_bitcode: false,
        export_options: {
            method: "ad-hoc",
            provisioningProfiles: {
                "dev.jerson.safebox.beta" => "SafeBox AdHoc"
            }
        }
      ) 
      on_success(platform_icon, name)
    rescue => exception
      on_error(platform_icon, name, exception)
    end
  end

  desc "Build Release IPA"
  lane :build_release do
    name = "Build Release Bundle: #{current_date}"
    begin
      on_start(platform_icon, name)
      cocoapods(repo_update: true, podfile: podfile)
      unlock_keychain(
        path:  File.expand_path("xcode.keychain", project_dir),
        password: ENV['KEYCHAIN_PASSWORD'].to_s
      )   
      get_provisioning_profile
      increment_build_number(build_number: ENV['CI_JOB_ID'], xcodeproj: xcodeproj)
      gym(
        workspace: workspace,
        scheme: "SafeBox",
        output_directory: output,
        include_symbols: true,
        include_bitcode: true,
        export_options: {
            method: "app-store",
            provisioningProfiles: {
                "dev.jerson.safebox" => "SafeBox"
            }
        }
      ) 
      on_success(platform_icon, name)
    rescue => exception
      on_error(platform_icon, name, exception)
    end
  end

  desc "Deploy a new version to the Apple Store - Release channel"
  lane :deploy_release do
    name = "Deploy Release channel: #{current_date}"
    begin
      on_start(platform_icon, name)
      deliver(
        force: true,
        ipa: File.expand_path("ipa/SafeBox.ipa", project_dir)
      )
      on_success(platform_icon, name)
    rescue => exception
      on_error(platform_icon, name, exception)
    end
  end

  desc "Deploy a new version to the Apple Store - Beta channel"
  lane :deploy_release_beta do
    name = "Deploy Beta channel: #{current_date}"
    begin
      on_start(platform_icon, name)
      pilot(
        ipa: File.expand_path("ipa/SafeBox.ipa", project_dir)
      )
      on_success(platform_icon, name)
    rescue => exception
      on_error(platform_icon, name, exception)
    end
  end

end
